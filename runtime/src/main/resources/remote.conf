akka {
  log-dead-letters = 10000

  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "INFO"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  extensions = ["com.romix.akka.serialization.kryo.KryoSerializationExtension$"]

  remote {
    artery {
      enabled = on
      canonical.hostname = "127.0.0.1"
      canonical.port = 25520
      advanced.maximum-frame-size = 1024 KiB
      advanced.idle-cpu-level = 1
    }

    default-remote-dispatcher {
      type = Dispatcher
      executor = "fork-join-executor"
      fork-join-executor {
        parallelism-min = 1
        parallelism-factor = 1
        parallelism-max = 1
      }
      throughput = 20
    }
  }

  actor {
    provider = remote

    allow-java-serialization = off

    serializers {
      kryo = "com.romix.akka.serialization.kryo.KryoSerializer"
    }

    serialization-bindings {
      "com.spbsu.flamestream.core.DataItem" = kryo
      "com.spbsu.flamestream.runtime.acker.api.Ack" = kryo
      "com.spbsu.flamestream.runtime.acker.api.Heartbeat" = kryo
      "com.spbsu.flamestream.runtime.acker.api.Commit" = kryo
      "com.spbsu.flamestream.runtime.acker.api.MinTimeUpdate" = kryo
      "com.spbsu.flamestream.runtime.acker.api.RegisterFront" = kryo
      "com.spbsu.flamestream.runtime.acker.api.FrontTicket" = kryo
      "com.spbsu.flamestream.runtime.edge.akka.AkkaFront$RawData" = kryo
      "com.spbsu.flamestream.runtime.edge.akka.AkkaFront$EOS" = kryo
      "com.spbsu.flamestream.runtime.graph.api.AddressedItem" = kryo
      "com.spbsu.flamestream.runtime.acker.api.UnregisterFront" = kryo
      "akka.actor.ActorSelectionMessage" = kryo
      "akka.actor.ActorIdentity" = kryo
    }

    kryo {
      type = "nograph"
      idstrategy = "automatic"
      max-buffer-size = -1
      use-manifests = false
      use-unsafe = true
      post-serialization-transformations = "off"
      implicit-registration-logging = false
      kryo-trace = false
      resolve-subclasses = false
    }

    default-dispatcher {
      type = "Dispatcher"

      executor = "fork-join-executor"

      fork-join-executor {
        parallelism-min = 1
        parallelism-factor = 1
        parallelism-max = 1
      }

      throughput = 20
    }
  }
}

resolver-dispatcher {
  type = "Dispatcher"

  executor = "fork-join-executor"

  fork-join-executor {
    parallelism-min = 8
    parallelism-factor = 3.0
    parallelism-max = 64
  }
}
